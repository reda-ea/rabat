// Generated by CoffeeScript 1.10.0
(function() {
  var $config, $view, _, debug, errordata, http, preformat, sendpage;

  _ = require('lodash');

  http = require('http');

  debug = (require('debug'))('rabat:errorpage');

  $view = require('./view');

  $config = require('./config');

  preformat = function(html) {
    if (html) {
      return '<pre style="text-align:left">' + html + '</pre>';
    }
  };

  sendpage = function(view, status, data) {
    var page;
    page = 'CUSTOM';
    return view('/' + status, data).then(_.identity, function(e) {
      if (e._rabat_error !== 'TEMPLATE_NOT_FOUND') {
        throw e;
      }
      page = 'DEFAULT';
      return view('./error', data);
    }).then(function(resp) {
      debug('got ' + status + ' response, sending ' + page + ' error page');
      return _.extend(resp, {
        status: status,
        auto: true
      });
    });
  };

  errordata = function(status) {
    var data, ref, ref1, ref2, ref3, statbase;
    data = {
      status: (ref = module.exports[status]) != null ? ref.status : void 0,
      colors: (ref1 = module.exports[status]) != null ? ref1.colors : void 0,
      message: (ref2 = module.exports[status]) != null ? ref2.message : void 0
    };
    statbase = String(status)[0] + '00';
    if (data.status == null) {
      data.status = [status, (ref3 = http.STATUS_CODES[status]) != null ? ref3 : http.STATUS_CODES[statbase]];
    }
    if (data.colors == null) {
      data.colors = module.exports[statbase].colors;
    }
    if (data.message == null) {
      data.message = module.exports[statbase].message;
    }
    return data;
  };

  module.exports = {
    $formatters: {
      '09-errorpage': function(resp) {
        var data, ref;
        if (!resp.auto) {
          return;
        }
        if ((ref = String(resp.status)[0]) === '4' || ref === '5') {
          data = errordata(resp.status);
          data.message = (data.message.call(this, resp)) || resp.body;
          if (resp.type === 'json') {
            data.data = (JSON.parse(resp.body)).data;
          }
          return sendpage(this.view, resp.status, data);
        }
      }
    },
    '404': {
      status: ['404', 'Page Not Found'],
      message: function(resp) {
        if (resp.body === this.path.context[this.path.context.length - 1]) {
          return 'The resource at <b>' + (this.path.context.join('/')) + '</b> could not be found.<br>Please try again later.';
        }
      }
    },
    '400': {
      colors: ['#ADD8E6', '#3D78A7', '#7599AF', '#DCEFFF', '#9AC2DA'],
      message: function(resp) {
        if (resp.type === 'json') {
          return (JSON.parse(resp.body)).message;
        }
      }
    },
    '500': {
      colors: ['#E6ADAD', '#A73D3D', '#AF7575', '#FFDCDC', '#DA9A9A'],
      message: function(resp) {
        var cause;
        if (resp.cause) {
          return (preformat(resp.cause.stack)) || resp.body;
        } else if (resp.type === 'json') {
          cause = JSON.parse(resp.body);
          return (preformat(cause.stack)) || cause.message || resp.body;
        }
      }
    }
  };

}).call(this);
